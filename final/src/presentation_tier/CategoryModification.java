package presentation_tier;

import businesstier.operations;
import data_tier.user;
import data_tier.category;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author sanju
 */
public class CategoryModification extends javax.swing.JFrame {

    private String category;

    /**
     * Creates new form category
     */
    public CategoryModification() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnbackcategory = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtcategoryname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtpriceperhour = new javax.swing.JTextField();
        addbtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        btnbackcategory.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnbackcategory.setText("Back");
        btnbackcategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackcategoryActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(249, 79, 76));
        jLabel1.setText("Category ID       :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 80, 130, 20);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(249, 79, 76));
        jLabel2.setText("Category Name :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 130, 130, 17);

        txtID.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        getContentPane().add(txtID);
        txtID.setBounds(150, 80, 200, 30);

        txtcategoryname.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtcategoryname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcategorynameActionPerformed(evt);
            }
        });
        getContentPane().add(txtcategoryname);
        txtcategoryname.setBounds(150, 120, 200, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(249, 79, 76));
        jLabel3.setText("Price per Hour   :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 170, 130, 14);

        txtpriceperhour.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(txtpriceperhour);
        txtpriceperhour.setBounds(150, 160, 200, 30);

        addbtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addbtn.setText("Add");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });
        getContentPane().add(addbtn);
        addbtn.setBounds(30, 220, 70, 23);

        updatebtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        updatebtn.setText("Update");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });
        getContentPane().add(updatebtn);
        updatebtn.setBounds(120, 220, 70, 23);

        deletebtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        deletebtn.setText("Delete");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });
        getContentPane().add(deletebtn);
        deletebtn.setBounds(210, 220, 67, 23);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(380, 220, 60, 23);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/parking.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 500, 300);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtcategorynameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcategorynameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcategorynameActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed

        int ID = Integer.parseInt(txtID.getText());
        String category = txtcategoryname.getText();
        double price_per_Hour = Double.parseDouble(txtpriceperhour.getText());

        operations o = new operations();
        ArrayList<category> cat = new ArrayList<category>();
        category c = new category();

        c.setID(ID);
        c.setCategory(category);
        c.setPrice_per_hour(price_per_Hour);

        cat.add(c);
      
        
        try {
            if (o.AddCategory(cat)) {
                JOptionPane.showMessageDialog(null, "Succesfully added!");
                
            } else {
                JOptionPane.showMessageDialog(null, "addiing Failed!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(CategoryModification.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addbtnActionPerformed
    private void clear() {

        txtID.setText(null);
        txtcategoryname.setText(null);
        txtpriceperhour.setText(null);
    }

    private void btnbackcategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackcategoryActionPerformed
        Mainmenu m = new Mainmenu(category);
        this.dispose();
        m.setVisible(true);
    }//GEN-LAST:event_btnbackcategoryActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
       int ID = Integer.parseInt(txtID.getText());
        String category = txtcategoryname.getText();
        double price_per_Hour = Double.parseDouble(txtpriceperhour.getText());

        operations o = new operations();
        ArrayList<category> cat = new ArrayList<category>();
        category c = new category();

        c.setID(ID);
        c.setCategory(category);
        c.setPrice_per_hour(price_per_Hour);

        cat.add(c);
      
        
        try {
            if (o.Updatecategory(cat)) {
                JOptionPane.showMessageDialog(null, "Succesfully Updated!");
                
            } else {
                JOptionPane.showMessageDialog(null, "Updating Failed!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(CategoryModification.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updatebtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed

      int ID = Integer.parseInt(txtID.getText());
 
        operations o = new operations();
        ArrayList<category> cat = new ArrayList<category>();
        category c = new category();

        c.setID(ID);

        cat.add(c);
      
        
        try {
            if (o.Deletecategory(cat)) {
                JOptionPane.showMessageDialog(null, "Succesfully Deleted!");
                
            } else {
                JOptionPane.showMessageDialog(null, "Deleting Failed!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(CategoryModification.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
 
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CategoryModification().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JButton btnbackcategory;
    private javax.swing.JButton deletebtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtcategoryname;
    private javax.swing.JTextField txtpriceperhour;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables

}
